# Jan 7, 2024 924
from collections import defaultdict
class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        N = len(graph)
        graphdic = defaultdict(list)
        for r in range(N):
            for c in range(r+1, N):
                if graph[r][c] == 1:
                    graphdic[r].append(c)
                    graphdic[c].append(r)

        visited = set()
        initial = set(initial)

        num_connections = defaultdict(int)

        def dfs(node, firstnode):
            visited.add(node)
            if num_connections[firstnode] != -1 and firstnode != node:
                num_connections[firstnode] += 1
            if node in initial and firstnode != node:
                num_connections[node] = -1
                num_connections[firstnode] = -1
            
            for nxt in graphdic[node]:
                if nxt not in visited:
                    dfs(nxt, firstnode)


        for node in initial:
            if node not in visited:
                dfs(node, node)
        
        
        max_connections = -2
        node = -2
        for key in sorted(num_connections.keys()):
            if max_connections < num_connections[key]:
                node = key
                max_connections = num_connections[key]
        return node